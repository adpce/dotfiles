#Functions

#This function implements searching in files for a certain pattern with ripgrep.
#All files containing the pattern are returned to sk, which lists them.
#The user then selects the file, and lf responds by selecting the file in its own view.
cmd gs ${{
    res="$( \
        RG_PREFIX="rg --column --line-number --no-heading --color=always \
            --smart-case "
        SKIM_DEFAULT_COMMAND="$RG_PREFIX ''" \
            sk --bind "change:reload:$RG_PREFIX {q} || true" \
            --ansi --header 'Search in files' \
            | choose 0
    )"
    [ ! -z "$res" ] && lf -remote "send $id select \"$res\""
}}

#This command provides sk with a list of files and directories in the current directory or below.
#When the user selects one, they are either changed into that directory, or that file is selected in lf.
cmd gj ${{
    res="$(fd '.' . | sk --regex --reverse --header='Jump to location' | sed 's/\\/\\\\/g;s/"/\\"/g')"
    if [ -d "$res" ] ; then
        cmd="cd"
    elif [ -f "$res" ] ; then
        cmd="select"
    else
        exit 0
    fi
    lf -remote "send $id $cmd \"$res\""
}}

cmd aj ${{
    res="$(git-annex find . --in=here | sk --regex --reverse --header='Jump to location' | sed 's/\\/\\\\/g;s/"/\\"/g')"
    if [ -d "$res" ] ; then
        cmd="cd"
    elif [ -f "$res" ] ; then
        cmd="select"
    else
        exit 0
    fi
    lf -remote "send $id $cmd \"$res\""
}}

cmd zz %{{
	result="$(zoxide query --exclude $PWD $@ | sed 's/\\/\\\\/g;s/"/\\"/g')"
	lf -remote "send $id cd \"$result\""
}}

cmd zi ${{
	result="$(zoxide query -i | sed 's/\\/\\\\/g;s/"/\\"/g')"
	lf -remote "send $id cd \"$result\""
}}

cmd ag ${{
	clear
	echo "$fx" | xargs -d"\n" git-annex get
	lf -remote "send $id unselect"
}}

cmd ac ${{
	clear
	echo "$fx" | xargs -d"\n" git-annex copy --to=cobalt
	lf -remote "send $id unselect"
}}

cmd gp ${{
	clear
	git pull --rebase || true
	echo "press ENTER"
	read ENTER
}}

cmd gt ${{
	clear
	git status
	echo "press ENTER"
	read ENTER
}}

cmd gl ${{
	clear
	git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	echo "press ENTER"
	read ENTER
}}

cmd gb ${{
    git branch | sk | xargs git checkout
    pwd_shell=$(pwd | sed 's/\\/\\\\/g;s/"/\\"/g')
    lf -remote "send $id updir"
    lf -remote "send $id cd \"$pwd_shell\""
}}

#Mappings
map . set hidden!
map <enter> :open
map gs :gs
map gj :gj
map gi $sxiv -af "$f"
map gm $mpv --no-audio-display "$f"
map gb :gb
map gp :gp
map gt :gt
map gl :gl
map D :delete "$fx"
map gf :filter
map zf :setfilter ''
map zi :zi
map zz :zz
map V :invert-below
map ag :ag
map ac :ac
map aj :aj

#Settings
set previewer ~/.config/lf/lf_kitty_preview
set cleaner ~/.config/lf/lf_kitty_clean
set icons true
set findlen 0
set drawbox true
set incfilter true
set incsearch true
set dirfirst false
set ratios 2:4:4
set anchorfind false
set shell zsh
